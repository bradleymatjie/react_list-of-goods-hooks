{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortTypes","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","App","useState","setIsReversed","NONE","setSortType","className","type","classNames","onClick","state","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAiBzB,OAfAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAKJ,EAAUU,QACb,OAAOF,EAAEG,cAAcF,GACzB,KAAKT,EAAUY,OACb,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAhCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAmCE,IAAMe,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBY,EAAnB,KACA,EAAgCD,mBAAShB,EAAUkB,MAAnD,mBAAOd,EAAP,KAAiBe,EAAjB,KAmBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYlB,IAAaJ,EAAUU,UAEvCa,QA3Be,WACrBJ,EAAYnB,EAAUU,UAmBlB,iCAYA,wBACEW,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYlB,IAAaJ,EAAUY,SAEvCW,QAnCa,WACnBJ,EAAYnB,EAAUY,SA2BlB,4BAYA,wBACES,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAajB,IAEjBkB,QA3CQ,WACdN,GAAc,SAAAO,GAAK,OAAMA,MAmCrB,sBAYEpB,IAAaJ,EAAUkB,MAAQb,IAE3B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAjDA,WACZJ,EAAYnB,EAAUkB,MACtBD,GAAc,IA4CJ,sBAUR,6BACGf,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CoB,KAAI,SAACC,GAAD,OACH,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC7HpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.12a2a0e6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortTypes {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortTypes,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortTypes.ALPABET:\n        return a.localeCompare(b);\n      case SortTypes.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortTypes.NONE);\n\n  const sortAlphabetic = () => {\n    setSortType(SortTypes.ALPABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortTypes.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(state => (!state));\n  };\n\n  const reset = () => {\n    setSortType(SortTypes.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortTypes.ALPABET },\n          )}\n          onClick={sortAlphabetic}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortTypes.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortTypes.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n            )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n          .map((good) => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}